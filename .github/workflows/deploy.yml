name: Deploy

on:
  push:
    branches: [feature/CICD-test]

permissions:
  id-token: write
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build without Test in Gradle
        run: ./gradlew build -x test

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Extract version and build Docker tag
        id: extract_version
        run: |
          VERSION=$(echo ./build/libs/instagram-0.0.1-SNAPSHOT.jar | sed -r 's/.*instagram-([0-9.]+)-SNAPSHOT\.jar/\1/')
          echo "DOCKER_TAG=${{ secrets.DOCKER_HUB_USERNAME }}/ogjg-instagram:$VERSION" >> $GITHUB_ENV

      - name: Create Dockerrun.aws.json
        run: |
          echo '{
            "AWSEBDockerrunVersion": "1",
            "Image": {
              "Name": "${{ env.DOCKER_TAG }}",
              "Update": "true"
            },
            "Ports": [
              {
                "ContainerPort": "80"
              }
            ]
          }' > Dockerrun.aws.json

      - name: Zip the Dockerrun file
        run: zip deployment.zip Dockerrun.aws.json

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_TAG }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: OGJG
          environment_name: OGJG-env
          version_label: ${{ github.run_id }}
          region: ${{ secrets.AWS_REGION }}
          deployment_package: deployment.zip
          use_existing_version_if_available: true